<div class="modal-header">
    <h4 class="modal-title">API</h4>
</div>
<div class="modal-body">
    <ul>
        <li><a href="#api_error">Ошибка валидации с сервера</a></li>
        <li><a href="#api_login">Авторизация</a></li>
        <li><a href="#api_register">Регистрация</a></li>
        <li><a href="#api_imageupload">Загрузка изображения</a></li>
        <li><a href="#api_restore_password">Восстановление пароля</a></li>
        <li><a href="#api_themes">Загрузка спортивных тем</a></li>
        <li><a href="#api_video">Загрузка видео с ютуба</a></li>
        <li><a href="#api_journal_add">Создание записи в дневнике</a></li>
        <li><a href="#api_journal_delete">Удаление записи в дневнике</a></li>
        <li><a href="#api_journal_edit">Редактирование записи в дневнике</a></li>
        <li><a href="#api_profile_view">Получить данные о профиле</a></li>
        <li><a href="#api_record_view">Страница просмотра записи</a></li>
        <li><a href="#api_like">Лайк/дизлайк</a></li>
        <li><a href="#api_complain">Жалоба на пользователя</a></li>
    </ul>
    <ul class="dev__api__content">

        <li id="api_error" class="dev__api__row">
            <p>пример отправки общей ошибки с сервера и ошибок для каждого поля</p>
            <code>POST: /api/xxx</code>
            <b>
                send data:
                <pre>
{
    phone: x,
    password: x
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: false,
    data: null,
    errors: {
        common: {
            error: 'Неверные телефон/пароль',
            fields: ['phone', 'password']
        },
        fields: [
            {
                name: 'phone',
                error: 'Неверный номер телефона'
            },
            {
                name: 'email',
                error: 'Такая почта уже зарегистрирована'
            }
        ]
    }
}
                    </pre>
            </b>
        </li>



        <li id="api_login" class="dev__api__row">
            <p>авторизация пользователя. возможно необходимо будет добавить какой то токен в ответ, который будет в дальнейшем использоваться в заголовках запросов</p>
            <code>POST: /api/login</code>
            <b>
                send data:
                <pre>
{
    phone: x,
    password: x
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: {
        id: x,
        avatar: x,
        fullName: x
    },
    errors: null
}
                    </pre>
            </b>
        </li>

        <li id="api_register" class="dev__api__row">
            <p>первый шаг регистрации. нужно только проверить правильность данных на сервере, отравить проверочный код на телефонный номер и в случае чего вернуть ошибки валидации</p>
            <code>POST: /api/register/step1</code>
            <b>
                send data:
                <pre>
{
    imgId: x,
    name: x,
    sername: x,
    birthday: x (dd MMM yyyy),
    sportTime: x (0->7),
    phone: x,
    gender: x (male, female)
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: null,
    errors: null
}
                    </pre>
            </b>

            <p>второй и заключительный шаг регистрации.</p>
            <code>POST: /api/register/step1</code>
            <b>
                send data:
                <pre>
{
    imgId: x,
    name: x,
    lastName: x,
    birthday: x (dd MMM yyyy),
    sportTime: x (0->7),
    phone: x,
    gender: x (male, female)
    password: x,
    passwordRepeat: x,
    code: x
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: null,
    errors: null
}
                    </pre>
            </b>
        </li>

        <li id="api_imageupload" class="dev__api__row">
            <p>загрузка изображения</p>
            <code>POST: /api/upload</code>
            <b>
                send data:
                <pre>
{
    imageFormData
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: {
        id: x,
        url: x
    },
    errors: null
}
                    </pre>
            </b>

        </li>

        <li id="api_restore_password" class="dev__api__row">
            <p>восстановление пароля. отправляется номер телефона желающего восстановить пароль</p>
            <code>POST: /api/restore_password_one</code>
            <b>
                send data:
                <pre>
{
    phone: x
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: null,
    errors: null
}
                    </pre>
            </b>
            <p>восстановление пароля. отправляется номер телефона и проверочный код</p>
            <code>POST: /api/restore_password_two</code>
            <b>
                send data:
                <pre>
{
    phone: x,
    code: x,
    password: x,
    passwordRepeat: x
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: null,
    errors: null
}
                    </pre>
            </b>

        </li>

        <li id="api_themes" class="dev__api__row">
            <p>запрос существующих спортивных тегов. для автокомплита</p>
            <code>GET: /api/sport_themes</code>
            <b>
                send data:
                <pre>
{
    query: xxx
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: ['турник', 'брусья'],
    errors: null
}
                    </pre>
            </b>

        </li>

        <li id="api_video" class="dev__api__row">
            <p>загрузка видео с ютуб. отправляется ссылка на видео youtube, в базе создается запись с собственным id, с remoteId этого видео (айдишник видео на ютубе), embeddedUrl урл для вставки, и картинкой. Эти же данные возвращаются при "загрузке видео"</p>
            <code>POST: /api/youtube</code>
            <b>
                send data:
                <pre>
{
    link: xxx
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: {
        id: xxx,
        remoteId: xxx,
        img: xxx,
        embeddedUrl: xxx
    },
    errors: null
}
                    </pre>
            </b>

        </li>

        <li id="api_journal_add" class="dev__api__row">
            <p>Добавление записи в дневник</p>
            <code>POST: /api/journal</code>
            <b>
                send data:
                <pre>
{
    text: xxx,
    media: [
        { id: xxx, type: 'video', img: xxx },
        { id: xxx, type: 'image', img: xxx }
    ],
    themes: [ 'xxx', 'xxx' ]
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: {
        id: x,
        date: xxx, (dd/MM/YYYY)
        text: xxx,
        media: [
            { id: xxx, type: 'video', img: xxx },
            { id: xxx, type: 'image', img: xxx }
        ],
        themes: [ 'xxx', 'xxx' ]
    }
    errors: null
}
                    </pre>
            </b>

        </li>

        <li id="api_journal_delete" class="dev__api__row">
            <p>Удаление записи в дневник</p>
            <code>DELETE: /api/journal</code>
            <b>
                send data:
                <pre>
{
    id: xxx
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: null,
    errors: null
}
                    </pre>
            </b>

        </li>


        <li id="api_journal_edit" class="dev__api__row">
            <p>Редактирование записи в дневник</p>
            <code>PUT: /api/journal</code>
            <b>
                send data:
                <pre>
{
    *json model* 
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: null,
    errors: null
}
                    </pre>
            </b>

        </li>


        <li id="api_profile_view" class="dev__api__row">
            <p>Запрос данных о профиле</p>
            <code>GET: /api/profile</code>
            <b>
                send data:
                <pre>
{
    id: x
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: {
        avatar: x,
        fullName: x,
        age: x,
        sportTime: x,
        location: x,
        isOwner: true/false
        followers: [
            list: [
                { id: 1, fullName: xxx, avatar: xxx },
                { id: 2, fullName: xxx, avatar: xxx },
                { id: 3, fullName: xxx, avatar: xxx },
                { id: 4, fullName: xxx, avatar: xxx }
            ]
            count: 120
        ]
        subscribe: [
            list: [
                { id: 1, fullName: xxx, avatar: xxx },
                { id: 2, fullName: xxx, avatar: xxx },
                { id: 3, fullName: xxx, avatar: xxx },
                { id: 4, fullName: xxx, avatar: xxx }
            ]
            count: 120
        ]
    },
    errors: null
}
                    </pre>
            </b>

        </li>

        <li id="api_record_view" class="dev__api__row">
            <p>Страница просмотра записи. <div class="alert alert-danger">!!! Модель пока что без комментариев</div></p>
            <code>GET: /api/journal/:id</code>
            <b>
                send data:
                <pre>
{
    *none*
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: {
            id: 123
            text: '1231231asdasddasdasd asd asd as dasasdsdasdasdasd asd asd  asd asdasdas dasdas das das 23'
            author: {
                id: 12
                avatar: 'avatar'
                fullName: 'Павел Козловский'
            }
            date: '19 июля 2015 | 15:08'
            likes: {
                isLiked: true
                list: [
                    { id: 1, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                    { id: 2, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                    { id: 3, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                    { id: 4, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                    { id: 5, fullName: 'Владимир Владимирович', avatar: 'avatartest1' }
                ]
                count: 23
            }
            media: [
                {
                    id: 1,
                    type: 'image',
                    img: 'srctest1',
                    likes: {
                        isLiked: true
                        list: [
                            { id: 1, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 2, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 3, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 4, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 5, fullName: 'Владимир Владимирович', avatar: 'avatartest1' }
                        ]
                        count: 23
                    }
                },
                {
                    id: 2,
                    type: 'image',
                    img: 'srctest2',
                    likes: {
                        isLiked: true
                        list: [
                            { id: 1, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 2, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 3, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 4, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 5, fullName: 'Владимир Владимирович', avatar: 'avatartest1' }
                        ]
                        count: 23
                    }
                },
                {
                    id: 3,
                    type: 'video',
                    img: 'srctest3',
                    likes: {
                        isLiked: true
                        list: [
                            { id: 1, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 2, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 3, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 4, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 5, fullName: 'Владимир Владимирович', avatar: 'avatartest1' }
                        ]
                        count: 23
                    }
                },
                {
                    id: 4,
                    type: 'image',
                    img: 'srctest4',
                    likes: {
                        isLiked: false
                        list: [
                            { id: 1, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 2, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 3, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 4, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                            { id: 5, fullName: 'Владимир Владимирович', avatar: 'avatartest1' }
                        ]
                        count: 23
                    }
                }
            ],
            tags: ['Питание', 'Программа тренировок'],
            comments {
                list: [
                    { 
                        id: 1, 
                        text: 'wwwwww wwwwww' ,
                        author {id: 5, fullName: 'Владимир Владимирович', avatar: 'avatartest1'},
                        likes { list: [...], count: 5, isLiked: false },
                        Date: "",
                        CommentFor { id: 5, name: "" } //изменить как удобнее будет
                    },
                ]
                count: 23
            }
        }
    },
    errors: null,
    message: null
}
                    </pre>
            </b>

        </li>


        <li id="api_like" class="dev__api__row">
            <p>Лайк дизлайк</p>
            <code>POST: /api/like</code>
            <b>
                send data:
                <pre>
{
    id: x,
    type: record/media
    action: like/dislike
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: null,
    errors: null,
    message: null
}
                    </pre>
            </b>

        </li>

        <li id="api_complain" class="dev__api__row">
            <p>Жалоба на пользователя</p>
            <code>POST: /api/complain</code>
            <b>
                send data:
                <pre>
{
    entityId: x,
    userId: x,
    text: x,
    type: profile/comment
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: null,
    errors: null,
    message: null
}
                    </pre>
            </b>

        </li>


        <li id="api_comment" class="dev__api__row">
            <p>Комментарий</p>
            <code>POST: /api/comment</code>
            <b>
                send data:
                <pre>
{
    commentForId: x,
    commentType: answer/comment,
    entityId: x,
    entityType: record/...,
    text: xxx
}
                    </pre>
            </b>
            <b>
                accept data:
                <pre>
{
    success: true,
    data: {
        id: 1,
        text: 'wwwwww wwwwww' ,
        author: {id: 5, fullName: 'Владимир Владимирович', avatar: 'avatartest1'},
        likes: {
            list: [
                { id: 1, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                { id: 2, fullName: 'Владимир Владимирович', avatar: 'avatartest1' },
                { id: 3, fullName: 'Владимир Владимирович', avatar: 'avatartest1' }
            ],
            count: 5,
            isLiked: false
        },
        created: xxx,
        commentFor: { id: 2, name: "Вася" }
    },
    errors: null,
    message: null
}
                    </pre>
            </b>

        </li>

    </ul>
</div>